{"remainingRequest":"/Users/wupeng/Desktop/projects-study/learns/learn-vue3/learn-vue3_p2/node_modules/_vue-loader-v16@16.0.0-beta.5.4@vue-loader-v16/dist/index.js??ref--1-1!/Users/wupeng/Desktop/projects-study/learns/learn-vue3/learn-vue3_p2/src/components/HelloWorld.vue?vue&type=style&index=0&id=469af010&scoped=true&lang=css","dependencies":[{"path":"/Users/wupeng/Desktop/projects-study/learns/learn-vue3/learn-vue3_p2/src/components/HelloWorld.vue","mtime":1639114542779},{"path":"/Users/wupeng/Desktop/projects-study/learns/learn-vue3/learn-vue3_p2/node_modules/_css-loader@3.6.0@css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/wupeng/Desktop/projects-study/learns/learn-vue3/learn-vue3_p2/node_modules/_vue-loader-v16@16.0.0-beta.5.4@vue-loader-v16/dist/stylePostLoader.js","mtime":499162500000},{"path":"/Users/wupeng/Desktop/projects-study/learns/learn-vue3/learn-vue3_p2/node_modules/_postcss-loader@3.0.0@postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/wupeng/Desktop/projects-study/learns/learn-vue3/learn-vue3_p2/node_modules/_cache-loader@4.1.0@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/wupeng/Desktop/projects-study/learns/learn-vue3/learn-vue3_p2/node_modules/_vue-loader-v16@16.0.0-beta.5.4@vue-loader-v16/dist/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CmgzIHsKICBtYXJnaW46IDQwcHggMCAwOwp9CnVsIHsKICBsaXN0LXN0eWxlLXR5cGU6IG5vbmU7CiAgcGFkZGluZzogMDsKfQpsaSB7CiAgZGlzcGxheTogaW5saW5lLWJsb2NrOwogIG1hcmdpbjogMCAxMHB4Owp9CmEgewogIGNvbG9yOiAjNDJiOTgzOwp9Cg=="},{"version":3,"sources":["/Users/wupeng/Desktop/projects-study/learns/learn-vue3/learn-vue3_p2/src/components/HelloWorld.vue"],"names":[],"mappings":";AAsIA,CAAC,EAAE;EACD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC;AAClB;AACA,CAAC,EAAE;EACD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;EACrB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;AACZ;AACA,CAAC,EAAE;EACD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EACrB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;AAChB;AACA,EAAE;EACA,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAChB","file":"/Users/wupeng/Desktop/projects-study/learns/learn-vue3/learn-vue3_p2/src/components/HelloWorld.vue","sourceRoot":"","sourcesContent":["<!--\n  * ref\n  * reactive\n  * toRefs\n  * computed\n-->\n<template>\n  <div class=\"hello\">\n    <h1>{{ msg }}</h1>\n    <hr />\n    <div class=\"user-wrapper\">\n      <span v-if=\"loginUser.name\">{{ loginUser.name }}</span\n      >&nbsp; <span v-if=\"loginUser.age\">{{ loginUser.age }}</span\n      >&nbsp;\n      <span v-if=\"loginUser.identity\">{{ loginUser.identity }}</span>\n    </div>\n    <hr />\n    <div class=\"ref-computed-wrapper\">\n      <span>ref 创建响应式对象: 基础类型 count: {{ count }}</span> &nbsp;\n      <span>computed double count: {{ countDouble }}</span> &nbsp;\n      <button @click=\"handleAddWithCount\">count +1</button> &nbsp;\n      <button @click=\"handleResetCount\">count reset</button> &nbsp;<br />\n      <span\n        >ref 创建响应式对象:复杂类型 {{ person.name }} - {{ person.age }}</span\n      >\n      &nbsp; <button @click=\"person.change\">change person</button> &nbsp;\n      <button @click=\"person.reset\">change reset</button>\n    </div>\n    <hr />\n    <div class=\"reactive-wrapper\">\n      <span\n        >reactive 创建响应式对象 {{ personWithReactive.name }} -\n        {{ personWithReactive.age }} - {{ personWithReactive.identity }}</span\n      >\n      &nbsp;\n      <button @click=\"personWithReactive.changeIdentity\">\n        change identity\n      </button>\n      &nbsp;\n      <button @click=\"personWithReactive.resetIdentity\">reset identity</button>\n    </div>\n    <div class=\"to-refes-with-reactive\">\n      <span\n        >toRes with reactive personWithReactive -> name: {{ name }} age:\n        {{ age }} identity: {{ identity }}</span\n      >\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, ref, computed, reactive, toRefs } from \"vue\";\nexport default defineComponent({\n  setup() {\n    //#region 登录用户信息\n    interface IUser {\n      name: string;\n      age?: number;\n      identity?: string | number;\n    }\n    const loginUser: IUser = {\n      name: \"Chenxin\",\n      age: 26,\n      identity: \"superAdmin\",\n    };\n    //#endregion 登录用户信息\n\n    //#region ref 创建响应式对象 count, computed 响应对象 countDouble, 事件触发更改响应对象\n    const count = ref(0);\n    const handleAddWithCount = (event: any) => {\n      console.log(event);\n      count.value++;\n    };\n    const handleResetCount = () => (count.value = 0);\n\n    //  computed countDouble\n    const countDouble = computed(() => count.value * 2);\n\n    //  ref 创建响应式对象, 复杂数据\n    const person = ref({\n      name: \"Chenxin\",\n      age: 26,\n      change() {\n        this.name = \"chen xin\";\n        this.age = 18;\n      },\n      reset() {\n        this.name = \"Chen xin\";\n        this.age = 26;\n      },\n    });\n    //#endregion 创建响应式对象 count\n\n    //#region reactive 创建响应式对象, toRefs 运用\n    const personWithReactive = reactive({\n      name: \"Chen xin\",\n      age: 26,\n      identity: 1,\n      /** 变更身份*/\n      changeIdentity() {\n        this.identity = 0;\n      },\n      resetIdentity() {\n        this.identity = 1;\n      },\n    });\n\n    //  reactive 参数必须是 object\n    //  const baseWithReactive = reactive(0)\n\n    //  toRefs 修饰 reactive 对象, 即可以使用展开运算符\n    const toRefsWithPerson = toRefs(personWithReactive);\n    //#endregion reactive 创建响应式对象\n\n    return {\n      loginUser,\n      count,\n      countDouble,\n      handleAddWithCount,\n      handleResetCount,\n      person,\n      personWithReactive,\n      ...toRefsWithPerson,\n    };\n  },\n  name: \"HelloWorld\",\n  props: {\n    msg: String,\n  },\n});\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\nh3 {\n  margin: 40px 0 0;\n}\nul {\n  list-style-type: none;\n  padding: 0;\n}\nli {\n  display: inline-block;\n  margin: 0 10px;\n}\na {\n  color: #42b983;\n}\n</style>\n"]}]}